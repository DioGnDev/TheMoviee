//
//  DetailMovieUsecase.swift
//  TheMoviee
//
//  Created by Ilham Hadi Prabawa on 2/24/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//

import Foundation

class GetDetailMovieUsecase: BaseUsecase {
    
    typealias T = DetailMovieEntity
    typealias P = DetailMovieRequest
    typealias E = DataError
    
    //repository
    let repository: DetailMovieRepositoryLogic
    
    init(repository: DetailMovieRepositoryLogic) {
        self.repository = repository
    }
    
    func execute(param: DetailMovieRequest,
                       completion: @escaping (Result<DetailMovieEntity, DataError>) -> Void) {
        
        repository.getDetailMovie(parameter: param.toParam()) { (result) in
            switch result {
            case .failure(let error):
                completion(.failure(error))
            case .success(let entity):
                completion(.success(entity))
                break
            }
        }
    }
}

class DetailMovieRequest: BaseRequest {
    
    var id: Int
    
    init(id: Int) {
        self.id = id
    }
    
    override func toParam() -> [String : Any] {
        return ["id": id,
                "api_key": apiKey,
                "language": language]
    }
}
