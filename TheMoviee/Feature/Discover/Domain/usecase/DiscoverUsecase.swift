//
//  DiscoverUsecase.swift
//  TheMoviee
//
//  Created by Ilham Hadi Prabawa on 2/23/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//

import Foundation

class GetDiscoverUsecase: BaseUsecase {
    
    typealias T = [DiscoverEntity]
    typealias P = DiscoverRequest
    typealias E = DataError
    
    //repository
    let repository: DiscoverRepositoryLogic
    
    init(repository: DiscoverRepositoryLogic) {
        self.repository = repository
    }
    
    func execute(param: DiscoverRequest,
                 completion: @escaping (Result<[DiscoverEntity], DataError>) -> Void) {
        
        repository.getDiscover(parameter: param.toParam()) { (result) in
            switch result {
            case .failure(let error):
                completion(.failure(error))
            case .success(let entities):
                completion(.success(entities))
                break
            }
        }
    }
}

class DiscoverRequest: BaseRequest {
    
    let genreId: Int
    let page: Int
    
    init(genreId: Int, page: Int) {
        self.genreId = genreId
        self.page = page
    }
    
    override func toParam() -> [String : Any] {
        return ["api_key": apiKey,
                "with_genres": genreId,
                "page": page]
    }
}
